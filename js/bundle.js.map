{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://food/./js/modules/modal.js","webpack://food/./js/script.js","webpack://food/./js/modules/form.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/cards.js","webpack://food/./js/service/services.js","webpack://food/./js/modules/calc.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/timer.js"],"sourcesContent":["\r\n// Закрытие модального окна\r\nfunction modalClose(modalSelector) {\r\n    document.querySelector(modalSelector).classList.remove('show');\r\n    document.body.style.overflow = '';\r\n    clearInterval(modalOpen);\r\n}\r\n// Открытие модального окна\r\nfunction modalOpen(modalSelector) {\r\n    document.querySelector(modalSelector).classList.add('show');\r\n    document.body.style.overflow = 'hidden';\r\n}\r\n\r\nfunction modal(modalData, modalSelector) {\r\n    const modalCall = document.querySelectorAll(modalData),\r\n            modalFrame = document.querySelector(modalSelector);\r\n    // Добавляем событие Click'а на все кнопки\r\n    modalCall.forEach((value) => {\r\n        value.addEventListener('click', () => {\r\n            modalOpen(modalSelector);\r\n        });\r\n    });\r\n\r\n    modalFrame.addEventListener('click', (e) => {\r\n        let target = e.target;\r\n        if (!target.closest('.modal__content') || target.hasAttribute('data-close')) {\r\n            modalFrame.classList.remove('show');\r\n            document.body.style.overflow = '';\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Escape' && modalFrame.classList.contains('show')) {\r\n            modalFrame.classList.remove('show');\r\n            document.body.style.overflow = '';\r\n        }\r\n    });\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 10) {\r\n            modalOpen(modalSelector);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {modalClose};\r\nexport {modalOpen};","'use strict';\r\n\r\nimport tabs from './modules/tabs';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport form from './modules/form';\r\nimport modal from './modules/modal';\r\nimport simpleSlider from './modules/slider';\r\nimport timer from './modules/timer';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items','tabheader__item_active');\r\n    cards();\r\n    calc();\r\n    form('form');\r\n    modal('[data-modal]','.modal');\r\n    simpleSlider({\r\n        selector: '.offer__slider',\r\n        slideSelector: '.offer__slide',\r\n        slidePrev: '.offer__slider-prev',\r\n        slideNext: '.offer__slider-next',\r\n        field: '.offer__slider-inner',\r\n        slideToScroll: 1,\r\n        transform: true,\r\n        dots: true\r\n    });\r\n    timer('.timer','2022-07-20');\r\n\r\n});","import {\r\n    modalClose,\r\n    modalOpen\r\n} from './modal';\r\nimport {\r\n    postData\r\n} from '../service/services';\r\n\r\nfunction form(formSelector) {\r\n    const form = document.querySelectorAll(formSelector);\r\n    // Указываем сообщения в зависимости от состояния формы\r\n    const formMessage = {\r\n        loading: 'img/spinner.svg',\r\n        success: 'Спасибо! Мы скоро с Вами свяжемся',\r\n        failure: 'Что-то пошло не так'\r\n    };\r\n\r\n    form.forEach(item => {\r\n        sendDataForm(item);\r\n    });\r\n\r\n    function sendDataForm(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            // Устанавливаем анимацию загрузки\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.setAttribute('src', formMessage.loading);\r\n            statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            const formData = new FormData(form);\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            // Отправляем данные на сервер\r\n            postData('http://localhost:3000/requests', json)\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    showSuccessModal(formMessage.success);\r\n                    statusMessage.remove();\r\n                }).catch(() => {\r\n                    showSuccessModal(formMessage.failure);\r\n                }).finally(() => {\r\n                    form.reset();\r\n                });\r\n        });\r\n        // Показываем сообщение об успешной отправке\r\n        function showSuccessModal(message) {\r\n            const modalContentDialog = document.querySelector('.modal__dialog');\r\n\r\n            modalContentDialog.classList.add('hide');\r\n            modalOpen('.modal');\r\n            const thanksModal = document.createElement('div');\r\n            thanksModal.classList.add('modal__dialog');\r\n            thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close=\"\" class=\"modal__close\">×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>`;\r\n\r\n            document.querySelector('.modal').append(thanksModal);\r\n            setTimeout(() => {\r\n                thanksModal.remove();\r\n                modalContentDialog.classList.remove('hide');\r\n                modalClose();\r\n            }, 3000);\r\n        }\r\n    }\r\n}\r\n\r\nexport default form;","function tabs(tabSelector, tabContent, tabParent, activeClass) {\r\n\r\n    const tabs = document.querySelectorAll(tabSelector),\r\n        tabsContent = document.querySelectorAll(tabContent),\r\n        tabsParent = document.querySelector(tabParent);\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show');\r\n        });\r\n        tabs.forEach(tab => {\r\n            tab.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent(0);\r\n\r\n    tabsParent.addEventListener('click', (e) => {\r\n        const target = e.target;\r\n\r\n        if (target && target.classList.contains(tabSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","import {getData} from '../service/services';\r\nfunction cards() {\r\n    // Класс для формирования карточек меню\r\n    class CardElement {\r\n\r\n        constructor(title, desciption, price, currency, img, parent, ...classes) {\r\n            this.title = title;\r\n            this.desciption = desciption;\r\n            this.price = price;\r\n            this.img = img;\r\n            this.parent = document.querySelector(parent);\r\n            this.currency = currency;\r\n            this.currencyValue = 3;\r\n            this.classes = classes;\r\n            this.convertToUAH();\r\n        }\r\n        // Метод конвертации валюты\r\n        convertToUAH() {\r\n            this.price = this.price * this.currencyValue;\r\n        }\r\n        // Метод формирования карточки товара\r\n        render() {\r\n            const block = document.createElement('div');\r\n            //Если в конструктор класса передано больше классов, то добавляем их на карточку\r\n            if (this.classes.length >= 1) {\r\n                this.classes.forEach(className => block.classList.add(className));\r\n            } else {\r\n                this.block = 'menu__item';\r\n                block.classList.add(this.block);\r\n            }\r\n            // Формируем вёрстку\r\n            block.innerHTML = `\r\n            <img src=\"${this.img}\" alt=\"${this.title}\">\r\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n            <div class=\"menu__item-descr\">${this.desciption}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n                <div class=\"menu__item-cost\">Цена:</div>\r\n                <div class=\"menu__item-total\"><span>${this.price}</span> ${this.currency}/дней</div>\r\n            </div>\r\n        `;\r\n\r\n            this.parent.append(block);\r\n        }\r\n    }\r\n    // Получаем данные с JSON-сервера\r\n    getData('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({img, title, descr,price}) => {\r\n                new CardElement( title, descr, price,'грн', img,'.menu__field .container','menu__item'\r\n                ).render();\r\n            });\r\n        })\r\n        .catch((data) => {\r\n            console.log(data)\r\n        });\r\n}\r\n\r\nexport default cards;","const postData = async (url, data) => {\r\n    const res = await fetch(url, {\r\n        method: \"POST\",\r\n        body: data,\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    });\r\n    return await res.json();\r\n};\r\nconst getData = async (url) => {\r\n    const data = await fetch(url)\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res;\r\n            } else {\r\n                throw new Error(`Could not feth\r\n                ${url}, status: ${res.status}`);\r\n            }\r\n        });\r\n    return await data.json();\r\n};\r\n\r\nexport {\r\n    postData,\r\n    getData\r\n};","function calc() {\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    // Проверяем наличие записей в localstorage\r\n    !localStorage.getItem('sex') ? localStorage.setItem('sex', 'female') : sex =  localStorage.getItem('sex');\r\n    !localStorage.getItem('ratio') ? localStorage.setItem('ratio', 1.375) : ratio =  localStorage.getItem('ratio');\r\n\r\n    // Заполняем информацию для калькулятор из localstorage\r\n    function initLocalSettings() {\r\n        let items = document.querySelectorAll('.calculating__choose-item');\r\n\r\n        items.forEach((item) => {\r\n            if (item.hasAttribute('data-ratio') && localStorage.getItem('ratio')) {\r\n                item.classList.remove('calculating__choose-item_active');\r\n                if (item.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                    item.classList.add('calculating__choose-item_active');\r\n                }\r\n            } else {\r\n                item.classList.remove('calculating__choose-item_active');\r\n                if (item.getAttribute('id') === localStorage.getItem('sex')) {\r\n                    item.classList.add('calculating__choose-item_active');\r\n                }\r\n            }\r\n        });\r\n    }\r\n    initLocalSettings();\r\n\r\n    function calcTotal() {\r\n        // Проверка на заполнение полей, если информации недостаточно записываем 0\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = \"0\";\r\n            return; //Останавливаем выполнение функции\r\n        }\r\n        //Проверка по полю \"sex\", в зависимости от значения разные формулы\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n    // Получаем значения полей\r\n    function getValue() {\r\n        let items = document.querySelectorAll('.calculating__choose-item');\r\n        items.forEach((item) => {\r\n            // Получение значений со всех INPUT'ов\r\n            if (item.tagName == \"INPUT\") {\r\n                item.addEventListener('input', () => {\r\n                    //Проверка строки на остуствие любых символов, кроме чисел\r\n                    if (item.value.match(/\\D/g)) {\r\n                        item.style.borderBottom = '1px solid red';\r\n                    } else {\r\n                        item.style.borderBottom = 'none';\r\n                    }\r\n                    // Получаем значение атрибутов и записываем в переменные\r\n                    switch (item.getAttribute('id')) {\r\n                        case 'height':\r\n                            height = +item.value;\r\n                            break;\r\n                        case 'weight':\r\n                            weight = +item.value;\r\n                            break;\r\n                        case 'age':\r\n                            age = +item.value;\r\n                            break;\r\n                    }\r\n                    // Вызываем функцинию по окончанию события\r\n                    calcTotal();\r\n                });\r\n            } else {\r\n                // Добавляем событие Click на все остальные элементы\r\n                item.addEventListener('click', (e) => {\r\n                    // Проверяем на наличие атрибута \"data-ratio\"\r\n                    if (e.target.hasAttribute('data-ratio')) {\r\n                        ratio = +e.target.getAttribute('data-ratio');\r\n                        localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                        items.forEach((item) => { // Удаляем классы активности у всех элементов\r\n                            if (item.hasAttribute('data-ratio')) {\r\n                                item.classList.remove('calculating__choose-item_active');\r\n                            }\r\n                            e.target.classList.add('calculating__choose-item_active'); // Устанавливаем класс активности\r\n                        });\r\n\r\n                    } else {\r\n                        // Получаем заниечение атрибута ID\r\n                        sex = e.target.getAttribute('id');\r\n                        localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                        items.forEach((item) => { // Удаляем классы активности у всех элементов\r\n                            if (!item.hasAttribute('data-ratio')) {\r\n                                item.classList.remove('calculating__choose-item_active');\r\n                            }\r\n                            e.target.classList.add('calculating__choose-item_active');// Устанавливаем класс активности\r\n                        });\r\n                    }\r\n                    // Вызываем функцинию по окончанию события\r\n                    calcTotal();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getValue();\r\n}\r\n\r\nexport default calc;","    function simpleSlider({\r\n        selector, // Основной контейнер слайдера\r\n        slideSelector, // Класс слайдов\r\n        slideToScroll, // Количество слайдов для скролла (только для стрелок)\r\n        slidePrev, // Класс навигации (Предыдущий слайд)\r\n        slideNext, // Класс навигации (Следующий слайд)\r\n        field, // Контейнер для слайдов (track)\r\n        transform, // Смещение слайдов через transform (true/false)\r\n        dots // Точки (true/false)\r\n    }) {\r\n        const sliderContainer = document.querySelector(selector),\r\n            currentSlide = sliderContainer.querySelector('#current'),\r\n            totalSlides = sliderContainer.querySelector('#total'),\r\n            slides = sliderContainer.querySelectorAll(slideSelector),\r\n            sliderPrev = sliderContainer.querySelector(slidePrev),\r\n            sliderNext = sliderContainer.querySelector(slideNext),\r\n            sliderWrapper = sliderContainer.querySelector('.offer__slider-wrapper'),\r\n            sliderField = sliderContainer.querySelector(field),\r\n            slideWidth = sliderContainer.querySelector('.offer__slide').offsetWidth;\r\n\r\n        let slideIndex = 1,\r\n            slidesToScroll = slideToScroll,\r\n            offset = 0;\r\n        // Если свойство transform = true, смещение слайдов будет реализовано через translate\r\n        if (transform) {\r\n            sliderField.style.width = slides.length * slideWidth + 'px';\r\n            sliderField.classList.add('slider-track');\r\n            slides.forEach((slide) => {\r\n                slide.style.width = slideWidth + 'px';\r\n            });\r\n        }\r\n        // Если dots = true, формируем навигационные точки\r\n        if (dots) {\r\n            const dotsContainer = document.createElement('div');\r\n            dotsContainer.classList.add('carousel-indicators');\r\n            for (let i = 0; i < slides.length; i++) {\r\n                const dot = document.createElement('button');\r\n                dot.classList.add('dot');\r\n                dot.setAttribute('data-index', i + 1);\r\n                dotsContainer.append(dot);\r\n            }\r\n            sliderWrapper.append(dotsContainer);\r\n            // Переключаем слайд по клику на элемент\r\n            sliderWrapper.addEventListener('click', (e) => {\r\n                let attrIndex = +e.target.getAttribute('data-index');\r\n                if (e.target.classList.contains('dot')) {\r\n                    changeSlide(attrIndex);\r\n                }\r\n            });\r\n        }\r\n        // Переключаем на предыдущий слайд\r\n        sliderPrev.addEventListener('click', () => {\r\n            let sliderPosition = +sliderWrapper.getAttribute('data-current-slide');\r\n            changeSlide(sliderPosition - slidesToScroll);\r\n        });\r\n        // Переключаем следующий слайд\r\n        sliderNext.addEventListener('click', () => {\r\n            let sliderPosition = +sliderWrapper.getAttribute('data-current-slide');\r\n            changeSlide(sliderPosition + slidesToScroll);\r\n        });\r\n\r\n        function changeSlide(index) {\r\n\r\n            slideIndex = index;\r\n\r\n            // Цикличное переключение слайдов\r\n            if (slideIndex > slides.length) {\r\n                slideIndex = 1;\r\n            } else if (slideIndex < 1) {\r\n                slideIndex = slides.length;\r\n            }\r\n\r\n            // Уставливаем значения для счетчика слайдов\r\n            if (slides.length < 10) {\r\n                currentSlide.textContent = `0${slideIndex}`;\r\n                totalSlides.textContent = `0${slides.length}`;\r\n            } else {\r\n                currentSlide.textContent = slideIndex;\r\n                totalSlides.textContent = slides.length;\r\n            }\r\n            // Устанавливаем дата-атрибут с текущим слайдом\r\n            sliderWrapper.setAttribute('data-current-slide', slideIndex);\r\n\r\n            // Устанавливаем класс активности для точек\r\n            if (dots) {\r\n                const dots = sliderContainer.querySelectorAll('.dot'),\r\n                    sliderPosition = sliderWrapper.getAttribute('data-current-slide');\r\n                dots.forEach((value, index) => {\r\n                    if (+sliderPosition === index + 1) {\r\n                        value.classList.add('active');\r\n                        return;\r\n                    }\r\n                    value.classList.remove('active');\r\n                });\r\n            }\r\n\r\n            if (!transform) {\r\n                // Переключение слайдов через классы show/hide\r\n                slides.forEach((value, index) => {\r\n                    if (index === slideIndex - 1) {\r\n                        value.classList.remove('hide');\r\n                        return;\r\n                    }\r\n                    value.classList.add('hide');\r\n                });\r\n            } else {\r\n                // Переключение слайдов методом translate\r\n                offset = slideWidth * (slideIndex - 1);\r\n                sliderField.style.transform = `translateX(${-offset}px)`;\r\n            }\r\n        }\r\n        // Устанавливаем слайд по умолчанию\r\n        changeSlide(1);\r\n    }\r\n\r\n\r\n\r\nexport default simpleSlider;","function timer(selector ,timeToEnd) {\r\n    //Дата окончания таймера в формате \"год-месяц-день\"\r\n    const endTimer = timeToEnd;\r\n\r\n    function GetTimeRemaining(endtime) {\r\n\r\n        let days, hours, minutes, seconds;\r\n        const time = Date.parse(endtime) - Date.parse(new Date());\r\n        // Устанавливаем значение при окончании таймера\r\n        if (time <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            // Получаем значения для каждого элемента счетчика\r\n            days = Math.floor(time / (1000 * 60 * 60 * 24)),\r\n                hours = Math.floor((time / (1000 * 60 * 60)) % 24),\r\n                minutes = Math.floor((time / 1000 / 60) % 60),\r\n                seconds = Math.floor((time / 1000) % 60);\r\n        }\r\n\r\n        return {\r\n            'total': time,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n    // Если значение < 0, то добавляем 0 в виде префикса\r\n    function addZero(number) {\r\n        if (number >= 0 && number < 10) {\r\n            return `0${number}`;\r\n        } else {\r\n            return number;\r\n        }\r\n    }\r\n    // Устанавливаем значения таймера\r\n    function setTime(endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(refreshClock, 1000);\r\n\r\n        function refreshClock() {\r\n            const time = GetTimeRemaining(endtime);\r\n\r\n            days.innerHTML = addZero(time.days);\r\n            hours.innerHTML = addZero(time.hours);\r\n            minutes.innerHTML = addZero(time.minutes);\r\n            seconds.innerHTML = addZero(time.seconds);\r\n\r\n            if (time.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n    setTime(endTimer);\r\n}\r\n\r\nexport default timer;"],"names":["modalOpen","modalSelector","document","querySelector","classList","add","body","style","overflow","window","addEventListener","formSelector","tabSelector","tabContent","tabParent","activeClass","tabs","querySelectorAll","tabsContent","tabsParent","hideTabContent","forEach","item","remove","tab","showTabContent","i","e","target","contains","slice","CardElement","constructor","title","desciption","price","currency","img","parent","this","currencyValue","classes","convertToUAH","render","block","createElement","length","className","innerHTML","append","async","data","fetch","url","then","res","ok","Error","status","json","getData","descr","catch","console","log","cards","result","sex","height","weight","age","ratio","calcTotal","textContent","Math","round","localStorage","getItem","setItem","hasAttribute","getAttribute","items","tagName","value","match","borderBottom","getValue","calc","form","showSuccessModal","message","modalContentDialog","thanksModal","setTimeout","clearInterval","preventDefault","statusMessage","setAttribute","cssText","insertAdjacentElement","formData","FormData","method","headers","postData","JSON","stringify","Object","fromEntries","entries","finally","reset","sendDataForm","modalData","modalCall","modalFrame","closest","key","showModalByScroll","pageYOffset","documentElement","clientHeight","scrollHeight","removeEventListener","modal","selector","slideSelector","slideToScroll","slidePrev","slideNext","field","transform","dots","sliderContainer","currentSlide","totalSlides","slides","sliderPrev","sliderNext","sliderWrapper","sliderField","slideWidth","offsetWidth","slideIndex","slidesToScroll","offset","width","slide","dotsContainer","dot","attrIndex","changeSlide","index","sliderPosition","simpleSlider","timeToEnd","addZero","number","endtime","timer","days","hours","minutes","seconds","timeInterval","setInterval","time","Date","parse","floor","GetTimeRemaining","total","setTime"],"sourceRoot":""}